<?xml version="1.0" encoding="UTF-8"?>
<!--
  Copyright 2024-2024 the original author or authors.
 
  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at
 
       https://www.apache.org/licenses/LICENSE-2.0
 
  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
-->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.fuhouyu.sass.infrastructure.repository.mapper.PermissionMapper">
    <resultMap id="BaseResultMap" type="com.fuhouyu.sass.infrastructure.repository.orm.PermissionDO" extends="com.fuhouyu.sass.infrastructure.repository.mapper.BaseMapper.BaseResultMap">
        <id column="id" property="id" jdbcType="BIGINT"/>
        <result column="parent_id" property="parentId" jdbcType="BIGINT"/>
        <result column="permission_name" property="permissionName" jdbcType="VARCHAR"/>
        <result column="permission_code" property="permissionCode" jdbcType="VARCHAR"/>
        <result column="permission_type" property="permissionType" jdbcType="VARCHAR"/>
        <result column="display_order" property="displayOrder" jdbcType="INTEGER"/>
        <result column="icon" property="icon" jdbcType="VARCHAR"/>
        <result column="route_path" property="routePath" jdbcType="VARCHAR"/>
        <result column="component_path" property="componentPath" jdbcType="VARCHAR"/>
        <result column="url_params" property="urlParams" jdbcType="VARCHAR"/>
        <result column="is_frame" property="isFrame" jdbcType="BOOLEAN"/>
        <result column="is_allow_modified" property="isAllowModified" jdbcType="BOOLEAN"/>
        <result column="is_systemd" property="isSystemd" jdbcType="BOOLEAN"/>
        <result column="is_visible" property="isVisible" jdbcType="BOOLEAN"/>
    </resultMap>

    <sql id="TableName">
        permissions
    </sql>

    <sql id="AllColumns">
        id,
        parent_id,
        permission_name,
        permission_code,
        permission_type,
        display_order,
        icon,
        route_path,
        component_path,
        url_params,
        is_frame,
        is_allow_modified,
        is_systemd,
        is_visible,
        is_deleted,
        create_at,
        update_at,
        create_by,
        update_by
    </sql>

    <sql id="QueryColumns">
        p.id,
        p.parent_id,
        p.permission_name,
        p.permission_code,
        p.permission_type,
        p.display_order,
        p.icon,
        p.route_path,
        p.component_path,
        p.url_params,
        p.is_frame,
        p.is_allow_modified,
        p.is_systemd,
        p.is_visible,
        p.is_deleted,
        p.create_at,
        p.update_at,
        p.create_by,
        p.update_by
    </sql>

    <insert id="insert" parameterType="com.fuhouyu.sass.infrastructure.repository.orm.PermissionDO">
        INSERT INTO
        <include refid="TableName"/>
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <include refid="AllColumns"/>
        </trim>
        VALUES
        <trim prefix="(" suffix=")" suffixOverrides=",">
            #{id},
            #{parentId},
            #{permissionName},
            #{permissionCode},
            #{permissionType},
            #{displayOrder},
            #{icon},
            #{routePath},
            #{componentPath},
            #{urlParams},
            #{isFrame},
            #{isAllowModified},
            #{isSystemd},
            #{isVisible},
            #{isDeleted},
            #{createAt},
            #{updateAt},
            #{createBy},
            #{updateBy},
        </trim>
    </insert>

    <insert id="insertBatch" parameterType="java.util.List" >
        INSERT INTO
        <include refid="TableName"/>
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <include refid="AllColumns"/>
        </trim>
        VALUES
        <foreach collection="list" separator="," item="entity">
            <trim prefix="(" suffix=")" suffixOverrides=",">
                #{entity.id},
                #{entity.parentId},
                #{entity.permissionName},
                #{entity.permissionCode},
                #{entity.permissionType},
                #{entity.displayOrder},
                #{entity.icon},
                #{entity.routePath},
                #{entity.componentPath},
                #{entity.urlParams},
                #{entity.isFrame},
                #{entity.isAllowModified},
                #{entity.isSystemd},
                #{entity.isVisible},
                #{entity.isDeleted},
                #{entity.createAt},
                #{entity.updateAt},
                #{entity.createBy},
                #{entity.updateBy},
            </trim>
        </foreach>
    </insert>

    <update id="update" parameterType="com.fuhouyu.sass.infrastructure.repository.orm.PermissionDO">
        UPDATE
        <include refid="TableName"/>
        SET

        <if test="permissionName != null and permissionName != ''">
            permission_name = #{permissionName},
        </if>
        <if test="displayOrder != null ">
            display_order = #{displayOrder},
        </if>
        <if test="icon != null">
            icon = #{icon},
        </if>
        <if test="routePath != null">
            route_path = #{routePath},
        </if>
        <if test="componentPath != null">
            component_path = #{componentPath},
        </if>
        <if test="urlParams != null and urlParams != ''">
            url_params = #{urlParams},
        </if>
        <if test="isFrame != null">
            is_frame = #{isFrame},
        </if>
         <if test="isVisible != null">
            is_visible = #{isVisible},
        </if>
        update_at = #{updateAt},
        update_by = #{updateBy}
        WHERE id = #{id}
    </update>

    <delete id="deleteById" parameterType="java.lang.Long">
        DELETE FROM <include refid="TableName"/>
        WHERE id = #{id}
    </delete>

    <delete id="deleteByIds" parameterType="java.util.List">
        DELETE FROM <include refid="TableName"/>
        WHERE id IN
        <foreach collection="list" open="(" close=")" separator="," item="id">
            #{id}
        </foreach>
    </delete>

    <select id="queryById" resultMap="BaseResultMap">
        SELECT <include refid="AllColumns"/>
        FROM <include refid="TableName"/>
        WHERE id = #{id}
    </select>


    <select id="queryByIds" parameterType="java.util.List" resultMap="BaseResultMap">
        SELECT <include refid="QueryColumns"/>
        FROM <include refid="TableName"/> p
        WHERE p.id IN
        <foreach collection="list" open="(" close=")" separator="," item="id">
            #{id}
        </foreach>
    </select>


    <select id="queryByPermissionCode" parameterType="java.lang.String" resultMap="BaseResultMap">
        SELECT <include refid="QueryColumns"/>
        FROM <include refid="TableName"/> p
        WHERE p.permission_code = #{permissionCode}
    </select>

    <select id="queryList" resultMap="BaseResultMap" >
        SELECT
        <include refid="QueryColumns"/>
                FROM
        <include refid="TableName"/> p
    </select>

    <select id="queryListByRoleIdList" resultMap="BaseResultMap">
        SELECT
        <include refid="QueryColumns"/>
        FROM
        role_has_permission rhp
        LEFT JOIN <include refid="TableName"/> p ON p.id = rhp.permission_id
        WHERE
        <foreach collection="roleIdList" separator="," item="roleId" open="rhp.role_id IN (" close=")">
            #{roleId}
        </foreach>
    </select>
</mapper>